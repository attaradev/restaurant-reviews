let restaurants,neighborhoods,cuisines;var newMap,markers=[];"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(e=>{console.log(`[SERVICE WORKER] Registered successfully! Scope: ${e.scope}`)}).catch(e=>{console.log(`[SERVICE WORKER] Registration failed: ${e}`)})}),document.addEventListener("DOMContentLoaded",e=>{initMap(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods().then(e=>{self.neighborhoods=e,fillNeighborhoodsHTML()})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines().then(e=>{self.cuisines=e,fillCuisinesHTML()})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),initMap=(()=>{self.newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibWlrZXB5YXR0YXJhIiwiYSI6ImNqb2x0em14aDBycHEza3FhdmV0aHR0NnEifQ.HIuVE6z3eKDOkeCS903CGQ",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),a=e.selectedIndex,n=t.selectedIndex,s=e[a].value,r=t[n].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(s,r).then(e=>{resetRestaurants(e),fillRestaurantsHTML()})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.remove()),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li");t.className="restaurant-card";const a=document.createElement("img");let n;a.alt=`image of ${e.name} restaurant`,"IntersectionObserver"in window?(n=new IntersectionObserver(function(e,t){e.forEach(e=>{e.intersectionRatio>0&&(s(e.target),t.unobserve(e.target))})},{threshold:.1})).observe(a):(console.log("Intersection Observers not supported","color: red"),s(a));const s=t=>{t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e)};t.append(a);const r=document.createElement("div");r.className="card-primary";const o=document.createElement("h2");o.className="card-title",o.innerHTML=e.name,r.append(o);const c=document.createElement("button");c.innerHTML="",c.classList.add("card-actions-button"),c.id=`favorite-icon-${e.id}`,c.onclick=function(){const t=!e.is_favorite;DBHelper.updateFavouriteStatus(e.id,t),e.is_favorite=!e.is_favorite,DBHelper.changeFavIconClass(c,e.is_favorite)},DBHelper.changeFavIconClass(c,e.is_favorite),r.append(c);const i=document.createElement("h3");i.className="card-subtitle",i.innerHTML=e.neighborhood,r.append(i),t.append(r);const l=document.createElement("div");l.className="card-secondary";const d=document.createElement("address");d.className="card-secondary-content",d.innerHTML=e.address,l.append(d),t.append(l);const m=document.createElement("div");m.className="card-actions";const u=document.createElement("a");return u.className="card-actions-link",u.innerHTML="View Details",u.href=DBHelper.urlForRestaurant(e),m.append(u),t.append(m),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.newMap);t.on("click",function(){window.location.href=t.options.url}),self.markers.push(t)})});