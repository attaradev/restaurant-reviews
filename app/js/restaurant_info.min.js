let restaurant;var newMap;document.addEventListener("DOMContentLoaded",()=>{initMap()}),initMap=(()=>{fetchRestaurantFromURL().then(e=>{self.newMap=L.map("map",{center:[e.latlng.lat,e.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibWlrZXB5YXR0YXJhIiwiYSI6ImNqb2x0em14aDBycHEza3FhdmV0aHR0NnEifQ.HIuVE6z3eKDOkeCS903CGQ",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap)}).catch(e=>console.error(e))}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return Promise.resolve(self.restaurant);const e=parseInt(getParameterByName("id"));return e&&NaN!==e?DBHelper.fetchRestaurantById(e).then(t=>t?(self.restaurant=t,fillRestaurantHTML(),t):Promise.reject(`Restaurant with ID ${e} was not found`)):Promise.reject("No restaurant id in URL")}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return Promise.resolve(self.restaurant);const e=parseInt(getParameterByName("id"));return e&&NaN!==e?DBHelper.fetchRestaurantById(e).then(t=>t?(self.restaurant=t,fillRestaurantHTML(),t):Promise.reject(`Restaurant with ID ${e} was not found`)):Promise.reject("No restaurant id in URL")}),fillRestaurantHTML=((e=self.restaurant)=>{const t=document.getElementById("restaurant-name");t.textContent=e.name,t.tabIndex="0";const n=document.createElement("button");n.innerHTML="",n.classList.add("card-actions-button"),n.id=`favorite-icon-${e.id}`,n.onclick=function(){const t=!e.is_favorite;DBHelper.updateFavouriteStatus(e.id,t),e.is_favorite=!e.is_favorite,DBHelper.changeFavIconClass(n,e.is_favorite)},DBHelper.changeFavIconClass(n,e.is_favorite),document.getElementById("restaurant-info").insertBefore(n,document.getElementById("restaurant-address")),document.getElementById("restaurant-address").innerHTML=e.address;const a=document.getElementById("restaurant-img");a.className="restaurant-img",a.src=DBHelper.imageUrlForRestaurant(e),a.alt=`photo of ${e.name}`,a.tabIndex="0",document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),DBHelper.fetchReviewsByRestId(e.id).then(e=>fillReviewsHTML(e))}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const a=document.createElement("tr");a.className="restaurant-card-table-content",a.tabIndex="0";const r=document.createElement("td");r.innerHTML=n,a.appendChild(r);const s=document.createElement("td");s.innerHTML=e[n],a.appendChild(s),t.appendChild(a)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.getElementById("reviews-list"),a=document.createElement("h3");a.className="reviews-title",a.innerHTML="Reviews",t.insertBefore(a,n);const r=document.createElement("button");if(r.textContent="Add review",r.setAttribute("type","button"),r.setAttribute("class","btn"),r.setAttribute("id","add-review"),r.onclick=(e=>openModal()),t.appendChild(r),!e){const e=document.createElement("p");return e.textContent="No reviews yet!",void n.append(e)}e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li");t.className="review-card";const n=document.createElement("div");n.className="card-primary";const a=document.createElement("h2");a.className="card-title",a.innerHTML=e.name,n.appendChild(a);const r=document.createElement("h3");r.className="card-subtitle",r.textContent=new Date(e.createdAt).toLocaleString(),n.appendChild(r),t.appendChild(n);const s=document.createElement("div");s.className="review-card-rating";const o=document.createElement("p");o.className="review-card-rating-content",o.textContent=`Rating: ${e.rating}`,s.append(o),t.appendChild(s);const d=document.createElement("div");d.className="card-secondary";const c=document.createElement("p");return c.className="card-secondary-content",c.textContent=e.comments,d.appendChild(c),t.appendChild(d),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.className="breadcrumb",n.innerHTML=e.name,n.setAttribute("aria-current","page"),t.setAttribute("aria-label","Breadcrumb"),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),addReview=(()=>{event.preventDefault();const e=self.restaurant.id;let t=document.getElementById("name").value,n=document.querySelector("#rating option:checked").value,a=document.getElementById("comment").value;closeModal();const r={restaurant_id:parseInt(e),name:t,rating:parseInt(n),comments:a,createdAt:new Date};DBHelper.addReview(r),addReviewHTML(r),document.getElementById("review-form").reset()}),addReviewHTML=(e=>{document.getElementById("no-review")&&document.getElementById("no-review").remove();const t=document.getElementById("reviews-container"),n=document.getElementById("reviews-list");n.insertBefore(createReviewHTML(e),n.firstChild),t.appendChild(n)});const modal=document.getElementById("reviewModal"),closeModalBtn=document.getElementById("closeBtn");function openModal(){modal.style.display="block",document.getElementById("addReview").addEventListener("click",addReview)}function closeModal(){modal.style.display="none"}function close(e){e.target==modal&&closeModal()}closeModalBtn.addEventListener("click",closeModal),window.addEventListener("click",close);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
